name: Build All (Orchestrator)

on:
  push:
    branches:
      - main
    paths:
      - 'percolate-rocks/Cargo.toml'
      - 'percolate-rocks/pyproject.toml'
      - 'percolate/pyproject.toml'
      - 'percolate-reading/pyproject.toml'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      rocks_changed: ${{ steps.detect.outputs.rocks_changed }}
      percolate_changed: ${{ steps.detect.outputs.percolate_changed }}
      reading_changed: ${{ steps.detect.outputs.reading_changed }}
      rocks_version: ${{ steps.detect.outputs.rocks_version }}
      percolate_version: ${{ steps.detect.outputs.percolate_version }}
      reading_version: ${{ steps.detect.outputs.reading_version }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Need previous commit to compare

      - name: Detect version bumps
        id: detect
        run: |
          echo "🔍 Detecting version changes..."

          # Initialize outputs
          ROCKS_CHANGED=false
          PERCOLATE_CHANGED=false
          READING_CHANGED=false

          # Check percolate-rocks (Cargo.toml)
          if git diff HEAD~1 HEAD -- percolate-rocks/Cargo.toml | grep -q '^+version'; then
            ROCKS_VERSION=$(grep '^version = ' percolate-rocks/Cargo.toml | cut -d'"' -f2)
            PREV_ROCKS=$(git show HEAD~1:percolate-rocks/Cargo.toml | grep '^version = ' | cut -d'"' -f2)
            if [ "$ROCKS_VERSION" != "$PREV_ROCKS" ]; then
              ROCKS_CHANGED=true
              echo "📦 percolate-rocks: v${PREV_ROCKS} → v${ROCKS_VERSION}"
            fi
          fi

          # Check percolate (pyproject.toml)
          if git diff HEAD~1 HEAD -- percolate/pyproject.toml | grep -q '^+version'; then
            PERCOLATE_VERSION=$(grep '^version = ' percolate/pyproject.toml | cut -d'"' -f2)
            PREV_PERCOLATE=$(git show HEAD~1:percolate/pyproject.toml | grep '^version = ' | cut -d'"' -f2)
            if [ "$PERCOLATE_VERSION" != "$PREV_PERCOLATE" ]; then
              PERCOLATE_CHANGED=true
              echo "📦 percolate: v${PREV_PERCOLATE} → v${PERCOLATE_VERSION}"
            fi
          fi

          # Check percolate-reading (pyproject.toml)
          if git diff HEAD~1 HEAD -- percolate-reading/pyproject.toml | grep -q '^+version'; then
            READING_VERSION=$(grep '^version = ' percolate-reading/pyproject.toml | cut -d'"' -f2)
            PREV_READING=$(git show HEAD~1:percolate-reading/pyproject.toml | grep '^version = ' | cut -d'"' -f2)
            if [ "$READING_VERSION" != "$PREV_READING" ]; then
              READING_CHANGED=true
              echo "📦 percolate-reading: v${PREV_READING} → v${READING_VERSION}"
            fi
          fi

          # If no version changes detected, check if files exist (initial case)
          if [ "$ROCKS_CHANGED" == "false" ] && [ -f percolate-rocks/Cargo.toml ]; then
            ROCKS_VERSION=$(grep '^version = ' percolate-rocks/Cargo.toml | cut -d'"' -f2 || echo "")
          fi
          if [ "$PERCOLATE_CHANGED" == "false" ] && [ -f percolate/pyproject.toml ]; then
            PERCOLATE_VERSION=$(grep '^version = ' percolate/pyproject.toml | cut -d'"' -f2 || echo "")
          fi
          if [ "$READING_CHANGED" == "false" ] && [ -f percolate-reading/pyproject.toml ]; then
            READING_VERSION=$(grep '^version = ' percolate-reading/pyproject.toml | cut -d'"' -f2 || echo "")
          fi

          # Set outputs
          echo "rocks_changed=${ROCKS_CHANGED}" >> $GITHUB_OUTPUT
          echo "percolate_changed=${PERCOLATE_CHANGED}" >> $GITHUB_OUTPUT
          echo "reading_changed=${READING_CHANGED}" >> $GITHUB_OUTPUT
          echo "rocks_version=${ROCKS_VERSION}" >> $GITHUB_OUTPUT
          echo "percolate_version=${PERCOLATE_VERSION}" >> $GITHUB_OUTPUT
          echo "reading_version=${READING_VERSION}" >> $GITHUB_OUTPUT

  build-rocks:
    needs: detect-changes
    if: needs.detect-changes.outputs.rocks_changed == 'true'
    uses: ./.github/workflows/build-rocks.yml
    secrets: inherit

  build-percolate:
    needs: [detect-changes, build-rocks]
    if: |
      always() &&
      needs.detect-changes.outputs.percolate_changed == 'true' &&
      (needs.detect-changes.outputs.rocks_changed == 'false' || needs.build-rocks.result == 'success')
    uses: ./.github/workflows/build-percolate.yml
    secrets: inherit

  build-reading:
    needs: [detect-changes, build-rocks]
    if: |
      always() &&
      needs.detect-changes.outputs.reading_changed == 'true' &&
      (needs.detect-changes.outputs.rocks_changed == 'false' || needs.build-rocks.result == 'success')
    uses: ./.github/workflows/build-reading.yml
    secrets: inherit

  summary:
    needs: [detect-changes, build-rocks, build-percolate, build-reading]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Create build summary
        run: |
          echo "### 🚀 Build Orchestrator Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Project | Changed | Version | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|---------|---------|--------|" >> $GITHUB_STEP_SUMMARY

          # percolate-rocks
          if [ "${{ needs.detect-changes.outputs.rocks_changed }}" == "true" ]; then
            STATUS="${{ needs.build-rocks.result }}"
            VERSION="${{ needs.detect-changes.outputs.rocks_version }}"
            echo "| percolate-rocks | ✓ | v${VERSION} | ${STATUS} |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| percolate-rocks | - | - | skipped |" >> $GITHUB_STEP_SUMMARY
          fi

          # percolate
          if [ "${{ needs.detect-changes.outputs.percolate_changed }}" == "true" ]; then
            STATUS="${{ needs.build-percolate.result }}"
            VERSION="${{ needs.detect-changes.outputs.percolate_version }}"
            echo "| percolate | ✓ | v${VERSION} | ${STATUS} |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| percolate | - | - | skipped |" >> $GITHUB_STEP_SUMMARY
          fi

          # percolate-reading
          if [ "${{ needs.detect-changes.outputs.reading_changed }}" == "true" ]; then
            STATUS="${{ needs.build-reading.result }}"
            VERSION="${{ needs.detect-changes.outputs.reading_version }}"
            echo "| percolate-reading | ✓ | v${VERSION} | ${STATUS} |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| percolate-reading | - | - | skipped |" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📋 Build DAG: rocks → (percolate + reading) → manifests" >> $GITHUB_STEP_SUMMARY
