---
apiVersion: v1
kind: Service
metadata:
  name: gateway
  namespace: percolate
  labels:
    app: gateway
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: 8000
  - name: https
    port: 443
    targetPort: 8000
  selector:
    app: gateway
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  namespace: percolate
  labels:
    app: gateway
spec:
  replicas: 3
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - gateway
              topologyKey: kubernetes.io/hostname
      containers:
      - name: gateway
        image: percolate/percolate-reading:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8000
        env:
        - name: PERCOLATE_COMPONENT
          value: "gateway"
        - name: REDIS_URL
          value: "redis://redis.percolate.svc.cluster.local:6379"
        - name: NATS_URL
          value: "nats://nats.percolate.svc.cluster.local:4222"
        - name: OPENBAO_ADDR
          value: "http://openbao.percolate.svc.cluster.local:8200"
        - name: S3_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: s3-credentials
              key: endpoint
        - name: S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: s3-credentials
              key: access_key
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: s3-credentials
              key: secret_key
        - name: S3_BUCKET_STAGING
          value: "percolate-staging"
        - name: S3_BUCKET_DATA
          value: "percolate-data"
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
